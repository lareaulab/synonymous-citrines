setwd("~/Dropbox/Berkeley/CodonCRISPR/Citrine Codon Paper and Final Data/figures data and code/figure 3 - ciber-seq and crispri/")
fun12 <- read.csv("CRISPRi citrine mRNA qPCR/FUIN12qPCROG20230413/FUN12_OGprimers_qPCR_20230413 -  Quantification Summary_0.csv", header = T)
rpg1 <- read.csv("CRISPRi citrine mRNA qPCR/RPG1qPCROG20230412/RPG1_OGprimers_qPCR_20230411 -  Quantification Summary_0.csv", header = T)
ho <- read.csv("CRISPRi citrine mRNA qPCR/HOqPCROG20230411/HO_OGprimers_qPCR_20230410 -  Quantification Summary_0.csv", header = T)
ho$biorep <- c( rep( 1:3, 12 ), rep( NA, 9) )
ho$expt <- rep( 'HO', 45)
rpg1$biorep <- c( rep( 1:3, 12 ), rep( NA, 9) )
rpg1$expt <- rep( 'RPG1', 45)
fun12$biorep <- c( rep( 1:3, 12 ), rep( NA, 9) )
fun12$expt <- rep( 'FUN12', 45)
all <- rbind( ho, rpg1, fun12)
# the average Cqs of the technical replicates for each sample (eg, HO cit9 bio rep 1)
avgs <- aggregate(Cq ~ biorep + expt + Target + Sample, all, mean)
View(avgs)
?barplot
plot(1:12, 2^-avgs$Cq[1:12], col=c(rep(rep("green",3),rep("red",3),2)))
c(rep(rep("green",3),rep("red",3),2))
rep("green",3)
rep("green",3),rep("red",3)
c(rep("green",3),rep("red",3))
rep(c(rep("green",3),rep("red",3)), 2)
plot(1:12, 2^-avgs$Cq[1:12], col=rep(c(rep("green",3),rep("red",3)), 2))
plot(1:12, 2^-avgs$Cq[1:12], col=rep(c(rep("green",3),rep("red",3)), 2), pch=19)
plot(1:12, Cq[1:12], col=rep(c(rep("green",3),rep("red",3)), 2), pch=19)
plot(1:12, avgs$Cq[1:12], col=rep(c(rep("green",3),rep("red",3)), 2), pch=19)
plot(1:36, avgs$Cq, col=c(rep("green",3),rep("red",3)), pch=19)
plot(1:36, avgs$Cq, col=c(rep("green",3),rep("red",3)), pch=19,ylim=c(0,20))
plot(1:36, avgs$Cq, col=c(rep("green",3),rep("red",3)), pch=19,ylim=c(0,20), axes=F)
axis(2)
axis(1, labels = avgs$expt)
axis(1, labels = avgs$expt, at=1:36)
axis(1, labels = avgs$expt, at=1:36, las=2)
plot(1:36, avgs$Cq, col=c(rep("green",3),rep("red",3)), pch=19,ylim=c(0,20), axes=F)
axis(1, labels = avgs$expt, at=1:36, las=2)
axis(2)
meancq <- aggregate( cq ~ Target + expt, avgs, mean)
meancq <- aggregate( Cq ~ Target + expt, avgs, mean)
View(meancq)
meancq <- aggregate( Cq ~ Target + sample, avgs, mean)
meancq <- aggregate( Cq ~ Target + Sample, avgs, mean)
plot(1:12, meancq$Cq, pch=19, col=c("green","red"))
plot(1:12, meancq$Cq, pch=19, col=c("green","red"), ylim=c(0,20), axes=F)
axis(2)
axis(1, labels=meancq$Sample, at=1:12, las=2)
flow <- read.csv("~/Downloads/raw_F_sub.csv", header=T)
head(flow)
flow_medians <- aggregate( c(Citrine.H, mCherry.H) ~ clone + cit + gene, median)
flow_medians <- aggregate( c(Citrine.H, mCherry.H) ~ clone + cit + gene, flow, median)
length()flow$clone
length(flow$clone)
nrow(flow)
nrow(flow$cit)
length(flow$cit)
flow_medians <- aggregate( Citrine.H ~ clone + cit + gene, flow, median)
citmedians <- aggregate( Citrine.H ~ clone + cit + gene, flow, median)
mchmedians <- aggregate( mCherry.H ~ clone + cit + gene, flow, median)
citmedians
View(citmedians)
View(mchmedians)
plot(1:18, citmedians$Citrine.H)
plot(1:18, citmedians$Citrine.H, ylim=c(0,230))
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE)
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab=NA)
axis(2)
axis(1, labels=citmedians$gene, at=1:18, las=2)
points( 1:18, mchmedians$mCherry.H, pch=19, col="red")
points( 1:18, mchmedians$mCherry.H/100, pch=19, col="red")
?axis
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab="fluorescence")
points( 1:18, mchmedians$mCherry.H/50, pch=19, col="red")
points( 1:18, mchmedians$mCherry.H/10, pch=19, col="red")
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab="fluorescence")
points( 1:18, mchmedians$mCherry.H/10, pch=19, col="red")
axis(2)
axis(1, labels=citmedians$gene, at=1:18, las=2)
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab="fluorescence")
points( 1:18, mchmedians$mCherry.H/20, pch=19, col="red")
axis(1, labels=citmedians$gene, at=1:18, las=2)
axis(2)
BiocManager::install("flowCore")
library(flowCore)
library(flowStats)
library(flowViz)
library(plyr)
library(tidyverse)
plots_on <- TRUE
setwd("/Users/liana/Dropbox/Berkeley/CodonCRISPR/FiguresJune2022/CRISPRi/CRISPRi_Data/FCS_files/")
guide_key <- read_csv("../guide_key.csv", col_names = c("strain","gene","alias"), col_types = "c")
# Set variable names for flow data files - must correspond to .fcs file parameters
var.names <- c("FSC.A","FSC.H", "SSC.A", "SSC.H", "Citrine.A", "Citrine.H", "mCherry.A", "mCherry.H", "time")
# Import and gate flow data - run on all .fcs files in directory
flowimport <- function( directory ){
# load the fcs files into a set
setwd( directory )
flowData <- read.flowSet( files = list.files( pattern = "*.fcs"), transformation = F )
# list with many flowFrames, each from a different .fcs experiment file
flowCore::colnames(flowData) <- var.names
sampleNames(flowData) <- sapply( list.files( path = directory, pattern = ".fcs" ),
function(x){ substr( x, nchar(x) - 6, nchar(x) - 4 ) })
# replace all values < 1 with 1
truncTrans <- truncateTransform( transformationId = "Truncate-transformation", a = 1 )
flowData <- flowCore::transform( flowData, transformList( c("Citrine.H", "mCherry.H"), truncTrans ))
# all values < 1 in the citrine and mCherry data replaced with 1
# gating: fits 2d normal distribution, selects all events within the Mahalanobis distance
normfilter <- norm2Filter( "FSC.A", "SSC.A")
normresults <- flowCore::filter( flowData, normfilter )
normsplit <- flowCore::split( flowData, normresults )
flowDataGated <- normsplit[[1]]
# save the defaultNorm2Filter+ values only
# diagnostic plots of flow data
if(plots_on == TRUE) {
# plot FSC vs SSC before gating
png( "fsc-ssc-unfiltered.png", width = 20, height = 20, units = "in", res = 300 )
print( xyplot( `SSC.A` ~ `FSC.A`, data = flowData, smooth = FALSE, ylim = c(0,20000), xlim = c(0,100000) ))
dev.off()
#plot data with gates
png( "fsc-ssc-normgates.png", width = 20, height = 20, units = "in", res = 300 )
print( xyplot( `SSC.A` ~ `FSC.A`, data = flowData, smooth = FALSE, filter = normresults, ylim = c(0,20000), xlim = c(0,100000) ))
dev.off()
# plot gated data only
png( "fsc-ssc-normgated-only.png", width = 20, height = 20, units = "in", res = 300 )
print( xyplot( `SSC.A` ~ `FSC.A`, data = flowDataGated, smooth = FALSE, ylim = c(0,20000), xlim = c(0,100000) ))
dev.off()
# plot gated fluorescence data only
png("fluor-normgated-only.png", width = 20, height = 20, units = "in", res = 300 )
print( xyplot( `Citrine.H` ~ `mCherry.H`, data = flowDataGated, smooth = FALSE, ylim = c(0,2000), xlim = c(0,10000) ))
dev.off()
png("fluor-all.png", width = 20, height = 20, units = "in", res = 300 )
print( xyplot( `Citrine.H` ~ `mCherry.H`, data = flowData, smooth = FALSE, ylim = c(0,2000), xlim = c(0,10000) ))
dev.off()
}
# convert the flowSet data to matrices then dataframes and combine them into one big dataframe
gated_data <- fsApply( flowDataGated, exprs, simplify = F, use.exprs = F)
gated_data <- lapply( gated_data, data.frame )
gated_data <- ldply( gated_data )
# mapping of well to sample
flow_map <- read.csv("flow_map.csv", header = T, row.names = 1)
colnames(flow_map) <- sprintf("%02d", 1:ncol(flow_map))
wells <- apply( expand.grid(row.names(flow_map), colnames(flow_map)), 1, function(x){ paste0(x[1], x[2]) })
flow_map <- data.frame( .id = wells, sample = c(as.matrix(flow_map)))
flow_map <- flow_map[flow_map$sample != "",]
# add sample names
final_data <- full_join( flow_map, gated_data, by = ".id" )
samples <- do.call(rbind, sapply( final_data$sample, function(x){strsplit(x,"-")} ))
samples <- data.frame(samples, row.names=NULL)
names(samples) <-  c( "strain", "clone", "cit", "media" )
final_data <- cbind(final_data, samples)
return(final_data)
}
setwd("/Users/liana/Dropbox/Berkeley/CodonCRISPR/FiguresJune2022/CRISPRi/CRISPRi_Data/FCS_files/")
#Run import on all folders in each directory and combine into a single dataframe
data1 <- flowimport( "/Users/liana/Dropbox/Berkeley/CodonCRISPR/FiguresJune2022/CRISPRi/CRISPRi_Data/FCS_files/10_28_21/" )
data2 <- flowimport( "/Users/liana/Dropbox/Berkeley/CodonCRISPR/FiguresJune2022/CRISPRi/CRISPRi_Data/FCS_files/11_1_21/" )
data3 <- flowimport( "/Users/liana/Dropbox/Berkeley/CodonCRISPR/FiguresJune2022/CRISPRi/CRISPRi_Data/FCS_files/11_24_21/" )
data4 <- flowimport( "/Users/liana/Dropbox/Berkeley/CodonCRISPR/FiguresJune2022/CRISPRi/CRISPRi_Data/FCS_files/12_3_21/" )
citfluor <- aggregate( Citrine.H ~ cit + gene, flow, median)
mchfluor <- aggregate( mCherry.H ~ cit + gene, flow, median)
View(citfluor)
View(mchfluor)
citfluor / 2^-meancq$Cq[seq(1,12,by=2)]
meancq$Cq[seq(1,12,by=2)]
2^-(meancq$Cq[seq(1,12,by=2)])
1e5 * citfluor / 2^-(meancq$Cq[seq(1,12,by=2)])
citfluor / 2^-(meancq$Cq[seq(1,12,by=2)])
citfluor / 2^-(meancq$Cq[seq(1,12,by=2)])
citfluor$Citrine.H / 2^-(meancq$Cq[seq(1,12,by=2)])
citfluor$Citrine.H / 2^-(meancq$Cq[seq(1,12,by=2)])
(citfluor$Citrine.H / 2^-(meancq$Cq[seq(1,12,by=2)])) / 10^5
citfluor$TE = (citfluor$Citrine.H / 2^-(meancq$Cq[seq(1,12,by=2)])) / 10^5
mchfluor$mCherry.H / 2^-(meancq$Cq[seq(2,12,by=2)])
(mchfluor$mCherry.H / 2^-(meancq$Cq[seq(2,12,by=2)])) / 10^5
mchfluor$TE <- (mchfluor$mCherry.H / 2^-(meancq$Cq[seq(2,12,by=2)])) / 10^5
plot(1:6, mchfluor$TE, xlim=c(0,150))
mchfluor$TE <- (mchfluor$mCherry.H / 2^-(meancq$Cq[seq(2,12,by=2)])) / 10^6
plot(1:6, mchfluor$TE, ylim=c(0,200))
plot(1:6, mchfluor$TE, ylim=c(0,200), ylab = "TE (arbitrary units", ylab="", axes=F)
plot(1:6, mchfluor$TE, ylim=c(0,200), ylab = "TE (arbitrary units", xlab="", axes=F, pch=19, col="red")
axis(2)
paste(citfluor$gene, citfluor$cit)
axis(1, at = 1:6, labels = paste(citfluor$gene, citfluor$cit), las=2)
points(1:6, citfluor$TE, pch=19, col="green")
plot(1:6, mchfluor$TE, ylim=c(0,200), ylab = "TE (arbitrary units)", xlab="", axes=F, pch=19, col="red")
points(1:6, citfluor$TE, pch=19, col="green")
axis(1, at = 1:6, labels = paste(citfluor$gene, citfluor$cit), las=2)
axis(2)
plot(1:12, meancq$Cq, pch=19, col=c("green","red"), ylim=c(0,20), axes=F)
axis(2)
axis(1, labels=meancq$Sample, at=1:12, las=2)
plot(1:12, meancq$Cq, pch=19, col=c("green","red"), ylim=c(0,20), axes=F, ylab="raw Cq", xlab=NA)
axis(2)
axis(1, labels=meancq$Sample, at=1:12, las=2)
View(data3)
View(data3)
rm(data3)
rm(data4)
rm(flow)
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab="fluorescence")
points( 1:18, mchmedians$mCherry.H/20, pch=19, col="red")
axis(1, labels=citmedians$gene, at=1:18, las=2)
axis(2)
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab="fluorescence")
points( 1:18, mchmedians$mCherry.H/50, pch=19, col="red")
points( 1:18, mchmedians$mCherry.H/10, pch=19, col="red")
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab="fluorescence")
points( 1:18, mchmedians$mCherry.H/10, pch=19, col="red")
axis(2)
axis(1, labels=citmedians$gene, at=1:18, las=2)
plot(1:18, citmedians$Citrine.H, ylim=c(0,230), pch=19, col="green", axes=FALSE, xlab=NA, ylab="fluorescence")
points( 1:18, mchmedians$mCherry.H/20, pch=19, col="red")
axis(1, labels=citmedians$gene, at=1:18, las=2)
axis(2)
plot(1:6, mchfluor$TE, ylim=c(0,200), ylab = "TE (arbitrary units)", xlab="", axes=F, pch=19, col="red")
points(1:6, citfluor$TE, pch=19, col="green")
axis(1, at = 1:6, labels = paste(citfluor$gene, citfluor$cit), las=2)
axis(2)
plot(1:12, meancq$Cq, pch=19, col=c("green","red"), ylim=c(0,20), axes=F, ylab="raw Cq", xlab=NA)
axis(2)
axis(1, labels=meancq$Sample, at=1:12, las=2)
