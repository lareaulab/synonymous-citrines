wt_g = as.vector(as.matrix(growth[,names(wt)]))
wt_c = as.vector(as.matrix(citrine[,names(wt)]))
wt_m = as.vector(as.matrix(mcherry[,names(wt)]))
# this isn't great but everything looks weird over OD 0.6...
wt_g[wt_g > 0.6] = NA
# predict background fluorescence from OD
c_auto = lm( wt_c ~ wt_g )
m_auto = lm( wt_m ~ wt_g )
# functions to compute predicted fluorescence based on OD
c_bg = function(x) { c_auto$coefficients[2] * x + c_auto$coefficients[1] }
m_bg = function(x) { m_auto$coefficients[2] * x + m_auto$coefficients[1] }
# subtract background from all
# this is breaking
cit_minus_bg = apply(citrine, 2, as.numeric) - c_bg( growth )
mch_minus_bg = apply(mcherry, 2, as.numeric) - m_bg( growth )
# OD vs citrine, subtracted
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,45000), xlab = "OD", ylab = "citrine (normalized)", main = "TIF34" )
sapply( names(wt), function(x)( lines( growth[,x], cit_minus_bg[,x], col="black" )))
sapply( names(key[intersect(intersect(g103, off), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey50" )))
sapply( names(key[intersect(intersect(g103, on), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="maroon" )))
sapply( names(key[intersect(intersect(g103, off), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey" )))
sapply( names(key[intersect(intersect(g103, on), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey", "black"))
# OD vs mch, subtracted
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,55000), xlab = "OD", ylab = "mCherry (normalized)", main = "TIF34" )
sapply( names(wt), function(x)( lines( growth[,x], mch_minus_bg[,x], col="black" )))
sapply( names(g103_off), function(x)( lines( growth[,x], mch_minus_bg[,x], col="grey")))
sapply( names(g103_on), function(x)( lines( growth[,x], mch_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("induced", "uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("red", "grey", "black"))
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,45000), xlab = "OD", ylab = "citrine (normalized)", main = "NIP1" )
sapply( names(wt), function(x)( lines( growth[,x], cit_minus_bg[,x], col="black" )))
sapply( names(key[intersect(intersect(g104, off), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey50" )))
sapply( names(key[intersect(intersect(g104, on), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="maroon" )))
sapply( names(key[intersect(intersect(g104, off), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey" )))
sapply( names(key[intersect(intersect(g104, on), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey", "black"))
# OD vs mch, subtracted
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,55000), xlab = "OD", ylab = "mCherry (normalized)", main = "NIP1" )
sapply( names(wt), function(x)( lines( growth[,x], mch_minus_bg[,x], col="black" )))
sapply( names(g104_off), function(x)( lines( growth[,x], mch_minus_bg[,x], col="grey")))
sapply( names(g104_on), function(x)( lines( growth[,x], mch_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("induced", "uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("red", "grey", "black"))
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,45000), xlab = "OD", ylab = "citrine (normalized)", main = "FUN12" )
sapply( names(wt), function(x)( lines( growth[,x], cit_minus_bg[,x], col="black" )))
sapply( names(key[intersect(intersect(g105, off), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey50" )))
sapply( names(key[intersect(intersect(g105, on), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="maroon" )))
sapply( names(key[intersect(intersect(g105, off), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey" )))
sapply( names(key[intersect(intersect(g105, on), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey", "black"))
# OD vs mch, subtracted
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,55000), xlab = "OD", ylab = "mCherry (normalized)", main = "FUN12" )
sapply( names(wt), function(x)( lines( growth[,x], mch_minus_bg[,x], col="black" )))
sapply( names(g105_off), function(x)( lines( growth[,x], mch_minus_bg[,x], col="grey")))
sapply( names(g105_on), function(x)( lines( growth[,x], mch_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("induced", "uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("red", "grey", "black"))
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,45000), xlab = "OD", ylab = "citrine (normalized)", main = "SSZ1" )
sapply( names(wt), function(x)( lines( growth[,x], cit_minus_bg[,x], col="black" )))
sapply( names(key[intersect(intersect(g106, off), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey50" )))
sapply( names(key[intersect(intersect(g106, on), citmin)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="maroon" )))
sapply( names(key[intersect(intersect(g106, off), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="grey" )))
sapply( names(key[intersect(intersect(g106, on), cit9)]),
function(x)( lines( growth[,x], cit_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey", "black"))
# OD vs mch, subtracted
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,55000), xlab = "OD", ylab = "mCherry (normalized)", main = "SSZ1" )
sapply( names(wt), function(x)( lines( growth[,x], mch_minus_bg[,x], col="black" )))
sapply( names(g106_off), function(x)( lines( growth[,x], mch_minus_bg[,x], col="grey")))
sapply( names(g106_on), function(x)( lines( growth[,x], mch_minus_bg[,x], col="red" )))
legend( "topleft", legend = c("induced", "uninduced", "wildtype"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("red", "grey", "black"))
# take citrine:mcherry ratios after subtracting background
ratios = cit_minus_bg / mch_minus_bg
# OD vs ratio
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,2), xlab = "OD", ylab = "citrine:mCherry ratio", main = "TIF34" )
sapply( names(key[intersect(intersect(g103, off), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="grey50", lwd=1 )))
sapply( names(key[intersect(intersect(g103, off), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="grey", lwd=1 )))
sapply( names(key[intersect(intersect(g103, on), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="maroon", lwd=1 )))
sapply( names(key[intersect(intersect(g103, on), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="red", lwd=1 )))
legend( "topright", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey"))
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,2), xlab = "OD", ylab = "citrine:mCherry ratio", main = "NIP1" )
sapply( names(key[intersect(intersect(g104, off), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="grey50", lwd=1 )))
sapply( names(key[intersect(intersect(g104, off), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="grey", lwd=1 )))
sapply( names(key[intersect(intersect(g104, on), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="maroon", lwd=1 )))
sapply( names(key[intersect(intersect(g104, on), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="red", lwd=1 )))
legend( "topright", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey"))
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,2), xlab = "OD", ylab = "citrine:mCherry ratio", main = "FUN12" )
sapply( names(key[intersect(intersect(g105, off), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="grey50", lwd=1 )))
sapply( names(key[intersect(intersect(g105, off), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="grey", lwd=1 )))
sapply( names(key[intersect(intersect(g105, on), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="maroon", lwd=1 )))
sapply( names(key[intersect(intersect(g105, on), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="red", lwd=1 )))
legend( "topright", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey"))
plot( NA, NA, xlim=c(0,0.6), ylim=c(0,2), xlab = "OD", ylab = "citrine:mCherry ratio", main = "SSZ1" )
sapply( names(key[intersect(intersect(g106, off), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="grey50", lwd=1 )))
sapply( names(key[intersect(intersect(g106, off), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="grey", lwd=1 )))
sapply( names(key[intersect(intersect(g106, on), citmin)]), function(x)( lines( growth[,x], ratios[,x], col="maroon", lwd=1 )))
sapply( names(key[intersect(intersect(g106, on), cit9)]), function(x)( lines( growth[,x], ratios[,x], col="red", lwd=1 )))
legend( "topright", legend = c("citMin, induced", "citMin, uninduced", "cit9, induced", "cit9, uninduced"),
lty = 1, lwd = 2, seg.len = 1, bty = "n", col=c("maroon", "grey50", "red", "grey"))
reps = sub("\\.\\d_", "_", key, perl=T)
inrange = ratios
inrange[growth < 0.45] = NA
inrange[growth > 0.55] = NA
# average fluorescence ratio within the window of OD between 0.6 and 1.0
ratio_means = apply(inrange, 2, function(x){mean(x, na.rm=T)})
cbind(reps, ratio_means)
# median of three technical replicates of the ratios
tech_medians = tapply( ratio_means, reps, median)
ons = seq(2, length(tech_medians), by = 2)
offs = seq(1, length(tech_medians), by = 2)
# compare pre to post induction for each biological replicate (same strain)
effects = tech_medians[ons]/tech_medians[offs]
names(effects) = sub("_\\d_on", "", names(effects))
names(effects) = sub("EFL_", "", names(effects))
stripchart( effects[1:14] ~ names(effects[1:14]),
vertical = T,
method = "jitter",
ylim = c(0,1.5),
ylab = "change in citrine:mCherry upon induction",
#xlim = c(0,3),
las = 3,
col = c("red", "maroon"),
pch = 19)
dev.off()
growth
growth[,names(g103_off)]
growthcurves = data.frame(time = timepoint, growth[,names(g103_off)])
growthcurves
library(growthcurver)
iinstall.packages("growthcurver")
install.packages("growthcurver")
library(growthcurver)
growthcurves
gc_fit <- SummarizeGrowth(growthcurves$time, growthcurves$A7)
gc_fit
gc_fit <- SummarizeGrowth(growthcurves$time, growthcurves$A8)
gc_fit
gc_fit <- SummarizeGrowth(growthcurves$time, growthcurves$A10)
gc_fit
growth103on = data.frame(time = timepoint, growth[,names(g103_off)])
growth[,names(g103_off)]
gr = growth
gr[ gr > 0.6 ] = NA
gr
gr$A1
gr$A10
growthdata = data.frame( time = timepoint, gr)
growthdata
growthdata$H5
gc_out <- SummarizeGrowthByPlate(growthdata)
gc_out
growthdata
lm( log(growthdata$A10), growthdata$time )
lm( log(growthdata$A10) ~ growthdata$time )
dim(growthdata)
apply( growthdata[,2:97], 2, function(x){lines(growthdata$time), x} )
plot( timepoint, rep(NA, 53), ylim=c(0,2), xlab = "time", ylab = "OD")
dev.off()
plot( timepoint, rep(NA, 53), ylim=c(0,2), xlab = "time", ylab = "OD")
apply( growthdata[,2:97], 2, function(x){lines(growthdata$time, x)} )
plot( timepoint, rep(NA, 53), ylim=c(0,0.6), xlab = "time", ylab = "OD")
apply( growthdata[,2:97], 2, function(x){lines(growthdata$time, x)} )
apply( growthdata[,2:10], 2, function(x){lines(growthdata$time, x)} )
plot( timepoint, rep(NA, 53), ylim=c(0,0.6), xlab = "time", ylab = "OD")
apply( growthdata[,2:10], 2, function(x){lines(growthdata$time, x)} )
apply( gr, 2, function(x){
lm( log(x) ~ timepoint )
}
)
class(apply( gr, 2, function(x){
lm( log(x) ~ timepoint )
}))
apply( gr, 2, function(x){
l = lm( log(x) ~ timepoint )
l
})
apply( gr, 2, function(x){
l = lm( log(x) ~ timepoint )
plot( timepoint, x, ylim = c(0,0.6), xlab="time", ylab="OD" )
fit = predict( l, timepoint )
})
apply( gr, 2, function(x){
l = lm( log(x) ~ timepoint )
plot( timepoint, x, ylim = c(0,0.6), xlab="time", ylab="OD" )
fit = predict( l, list(time = timepoint ) )
})
apply( gr[,1:10], 2, function(x){
l = lm( log(x) ~ timepoint )
plot( timepoint, x, ylim = c(0,0.6), xlab="time", ylab="OD", type="l" )
fit = predict( l, list(time = timepoint ) )
lines( timepoint, exp(fit), col="red")
})
apply( gr[,1:10], 2, function(x){
l = lm( log(x) ~ timepoint )
plot( timepoint, log(x), ylim = c(0,0.6), xlab="time", ylab="OD", type="l" )
fit = predict( l, list(time = timepoint ) )
#lines( timepoint, exp(fit), col="red")
})
apply( gr[,1:10], 2, function(x){
#l = lm( log(x) ~ timepoint )
plot( timepoint, log(x), xlab="time", ylab="OD", type="l" )
#fit = predict( l, list(time = timepoint ) )
#lines( timepoint, exp(fit), col="red")
})
apply( gr[,1:10], 2, function(x){
l = lm( log(x) ~ timepoint )
plot( timepoint, x, ylim = c(0,0.6), xlab="time", ylab="OD", type="l" )
fit = predict( l, list(time = timepoint ) )
lines( timepoint, exp(fit), col="red")
})
View(mch)
r01s = read.delim("~/Downloads/SearchResult_Export_26Feb2022_112622.csv", skip=7, sep=",")
View(r01s)
r01s$Suffix
r01s[(r01s$Suffix != "S" & r01s$Suffix != "A"),]
r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A")]
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A")])
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A")], breaks=20)
which(r01s$Direct.Cost.IC > 1000000)
r01s[1728,]
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS")], breaks=20)
which(r01s$Funding.IC.s. != "NIGMS")
r01s[r01s$Funding.IC.s. != "NIGMS"),[]
r01s[r01s$Funding.IC.s. != "NIGMS"),]
r01s[r01s$Funding.IC.s. != "NIGMS",]
r01s$Direct.Cost.IC[r01s$Funding.IC.s. != "NIGMS"]
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS")], breaks=20, xlim=c(0, 1000000))
which(r01s$Direct.Cost.IC > 750000)
which(r01s$Direct.Cost.IC > 700000)
which(r01s$Direct.Cost.IC > 500000)
r01s[which(r01s$Direct.Cost.IC > 500000),]
r01s[which(r01s$Direct.Cost.IC > 700000),]
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS")], breaks=20, xlim=c(0, 700000))
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS")], breaks=40, xlim=c(0, 700000))
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS")], breaks=40, xlim=c(0, 700000), xlab = "Direct Costs", main="NIGMS R01s, 2021")
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS" & r01s$Direct.Cost.IC < 700000)], breaks=40)
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS" & r01s$Direct.Cost.IC < 700000)]/1000, breaks=40)
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS" & r01s$Direct.Cost.IC < 700000)], breaks=40)
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS") & r01s$Direct.Cost.IC < 700000], breaks=40, xlab = "Direct Costs", main="NIGMS R01s, 2021")
?by
by( r01s$Direct.Cost.IC, r01s$Contact.PI...Project.Leader, sum)
unlist(as.list(by( r01s$Direct.Cost.IC, r01s$Contact.PI...Project.Leader, sum)))
hist(unlist(as.list(by( r01s$Direct.Cost.IC, r01s$Contact.PI...Project.Leader, sum))))
subset = r01s[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS"),]
dim(subset)
dim(r01s)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))))
subset = r01s[(r01s$Suffix != "S" & r01s$Suffix != "A" & r01s$Funding.IC.s. == "NIGMS" & r01s$Direct.Cost.IC < 700000),]
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))))
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 20)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 30)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 40)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 36)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 35)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 20)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 20, xlab = "Total direct costs", main="NIGMS R01s, total by PI, 2021")
subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 400000,]
subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 400000]
?count
unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum)))
unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 500000
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 500000)
length(which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 500000))
length(which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000))
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000)
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 390000)
length(which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 390000))
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 390000)
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 390000)
length(which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 390000))
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 390000)
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 250000,])
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 250000])
length(which(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 250000]))
dim(subset)
540/1929
length(which(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 210000]))
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 210000])
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC < 210000])
1098/1929
miras = read.delim("~/Downloads/SearchResult_Export_27Feb2022_121754.csv", skip=9, sep=",")
View(miras)
mirasubset = miras[(miras$Suffix != "S" & miras$Suffix != "A"),]
dim(miras)
dim(mirasubset)
mirasubset$Direct.Cost.IC
hist(mirasubset$Direct.Cost.IC)
hist(mirasubset$Direct.Cost.IC, breaks = 20)
hist(mirasubset$Direct.Cost.IC, breaks = 30)
min(mirasubset$Direct.Cost.IC)
mirasubset[min(mirasubset$Direct.Cost.IC),]
?unique
?duplicated
duplicated(mirasubset$Contact.PI...Project.Leader)
which(duplicated(mirasubset$Contact.PI...Project.Leader))
mirasubset[1042,]
which(duplicated(mirasubset$Contact.PI...Project.Leader))
mirasubset[1412,]
hist(mirasubset$Direct.Cost.IC, breaks = 20, main="NIGMS R35s, 2021", xlab="Direct Costs")
hist(mirasubset$Direct.Cost.IC, breaks = 30, main="NIGMS R35s, 2021", xlab="Direct Costs")
mirasubset$Direct.Cost.IC > 400000
mirasubset[mirasubset$Direct.Cost.IC > 400000,]
mirasubset[mirasubset$Direct.Cost.IC > 390000,]
mirasubset[mirasubset$Direct.Cost.IC > 390000,c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")]
mirasubset[mirasubset$Direct.Cost.IC > 390000, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")]
dim(mirasubset[mirasubset$Direct.Cost.IC > 390000, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")])
dim(mirasubset[mirasubset$Direct.Cost.IC > 400000, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")])
mirasubset[mirasubset$Direct.Cost.IC > 500000, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")]
mirasubset[mirasubset$Direct.Cost.IC > 400000, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")]
mirasubset[mirasubset$Organization.Name == "UNIVERSITY OF CALIFORNIA BERKELEY"", c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")]
mirasubset[mirasubset$Organization.Name == "UNIVERSITY OF CALIFORNIA BERKELEY, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")]
mirasubset[mirasubset$Organization.Name == "UNIVERSITY OF CALIFORNIA BERKELEY", c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")]
mirasubset[mirasubset$Organization.Name == "UNIVERSITY OF CALIFORNIA BERKELEY", c("Contact.PI...Project.Leader", "Direct.Cost.IC")]
berkeley = mirasubset[mirasubset$Organization.Name == "UNIVERSITY OF CALIFORNIA BERKELEY", c("Contact.PI...Project.Leader", "Direct.Cost.IC")]
berkeley[order(berkeley$Direct.Cost.IC),]
berkeley[order(berkeley$Direct.Cost.IC),]
dim(mirasubset[mirasubset$Direct.Cost.IC > 400000, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")])
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 400000,])
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 400000])
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 390000])
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 500000])
length(subset$Contact.PI...Project.Leader[subset$Direct.Cost.IC > 400000])
dim(subset)
dim(mirasubset)
dim(mirasubset[mirasubset$Direct.Cost.IC > 400000, c("Direct.Cost.IC", "Contact.PI...Project.Leader", "Organization.Name")])
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000)
length(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000))
length(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000)
dim(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000)
which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000)
length(which(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))) > 400000))
length(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))))
View(berkeley)
berkeley[order(berkeley$Direct.Cost.IC),]
berkeley = read.delim("~/Downloads/SearchResult_Export_27Feb2022_010322.csv", skip=6, sep=",")
View(berkeley)
by( berkeley$Direct.Cost.IC, berkeley$Contact.PI.Person.ID, sum )
by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )
unlist(as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )))
data.frame( total = as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )) )
data.frame( total = unlist(as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )) ))
berkeleysums = data.frame( total = as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )) )
sort(berkeleysums = data.frame( total = as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )) ))
sort(berkeleysums)
berkeleysums = data.frame( total = as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )) )
berkeleysums
berkeleysums = data.frame( total = unlist(as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )) ))
berkeleysums
berkeleysums[order(berkeleysums$total)]
berkeleysums[order(berkeleysums$total),]
berkeleysums = data.frame( total = unlist(as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum ))), names = names(unlist(as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )))
)
berkeleysums = data.frame( total = unlist(as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum ))), names = names(unlist(as.list(by( berkeley$Direct.Cost.IC, berkeley$Contact.PI...Project.Leader, sum )))))
berkeleysumes
berkeleysums
berkeleysums[order(berkeleysums$total),]
berkeley[18:20,]
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Funding.IC.s. == "NIGMS")], breaks=20)
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Funding.IC.s. == "NIGMS") & r01s$Direct.Cost.IC < 700000], breaks=40, xlab = "Direct Costs", main="NIGMS R01s, 2021")
subset = r01s[(r01s$Suffix != "S" & r01s$Funding.IC.s. == "NIGMS"),]
hist(subset, breaks=40)
hist(subset$Direct.Cost.IC, breaks=40)
subset = r01s[(r01s$Suffix != "S" & r01s$Funding.IC.s. == "NIGMS"),]
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))))
which(subset$Direct.Cost.IC > 700000)
subset = r01s[(r01s$Suffix != "S" & r01s$Funding.IC.s. == "NIGMS" & r01s$Direct.Cost.IC < 700000),]
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))), breaks = 20, xlab = "Total direct costs", main="NIGMS R01s, total by PI, 2021")
hist(subset$Direct.Cost.IC, breaks=40, xlab = "Direct Costs", main="NIGMS R01s, 2021")
hist(r01s$Direct.Cost.IC[(r01s$Suffix != "S" & r01s$Funding.IC.s. == "NIGMS") & r01s$Direct.Cost.IC < 700000],
breaks=40, xlab = "Direct Costs", main="NIGMS R01s, 2021")
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))),
breaks = 20, xlab = "Total direct costs", main="NIGMS R01s, total by PI, 2021")
miras = read.delim("~/Downloads/SearchResult_Export_27Feb2022_121754.csv", skip=9, sep=",")
mirasubset = miras[miras$Suffix != "S",]
hist(mirasubset$Direct.Cost.IC, breaks = 30, main="NIGMS R35s, 2021", xlab="Direct Costs")
hist(mirasubset$Direct.Cost.IC, breaks = 20, main="NIGMS R35s, 2021", xlab="Direct Costs")
berkeley = read.delim("~/Downloads/SearchResult_Export_27Feb2022_010322.csv", skip=6, sep=",")
berksubset = berkeley[berkeley$Suffix != "S",]
hist(berksubset$Direct.Cost.IC, breaks=30)
View(berksubset)
berksubset = berkeley[berkeley$Suffix != "S",]
which(berksubset$Direct.Cost.IC > 2000000)
which(berksubset$Direct.Cost.IC > 1000000)
which(berksubset$Direct.Cost.IC > 1500000)
berksubset = berkeley[berkeley$Suffix != "S" & berkeley$Direct.Cost.IC < 2000000,]
hist(berksubset$Direct.Cost.IC, breaks=30)
hist(berksubset$Direct.Cost.IC, breaks=30, main = "Berkeley R01-equivs, 2021", xlab="Direct Costs")
sums = unlist(as.list(by( berksubset$Direct.Cost.IC, berksubset$Contact.PI...Project.Leader, sum )))
sums
names(subs)
names(sums)
berkeleysums = data.frame( total = sums, row.names = names(sums))
berkeleysums
berkeleysums[order(berkeleysums$total),]
berkeleysums = data.frame( total = sums, PI = names(sums))
berkeleysums[order(berkeleysums$total),]
berkeleysums = data.frame(  PI = names(sums), total = sums)
berkeleysums[order(berkeleysums$total),]
by( berksubset$Direct.Cost.IC, berksubset$Contact.PI...Project.Leader, function(x){length(x)} )
ngrants = unlist(as.list(by( berksubset$Direct.Cost.IC, berksubset$Contact.PI...Project.Leader, function(x){length(x)} )))
ngrants
berkeleysums = data.frame(  totalDC = sums, ngrants = ngrants, row.names=names(sums))
berkeleysums
hist(ngrants)
table(ngrants)
34/(108 + 34 + 7 + 1)
108/(108 + 34 + 7 + 1)
berkeleysums[order(berkeleysums$total),]
dim(berkeleysums[order(berkeleysums$total),])
row.names(berkeleysums)[order(berkeleysums$total)]
which(row.names(berkeleysums)[order(berkeleysums$total)] == "INGOLIA, NICHOLAS T")
hist( berkeleysums$totalDC)
hist( berkeleysums$totalDC, breaks = 20)
hist( berkeleysums$totalDC, breaks = 20, xlim = c(0, 2500000)
)
hist( berkeleysums$totalDC, breaks = 20, xlim = c(0, 2500000), main="sum per PI, NIH R01-equivs", xlab="Direct Costs")
hist( berkeleysums$totalDC, breaks = 20, xlim = c(0, 2500000), main="sum per Berkeley PI, NIH R01-equivs", xlab="Direct Costs")
hist( berkeleysums$totalDC, breaks = 20, xlim = c(0, 2500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs")
hist( berkeleysums$totalDC, breaks = 20, xlim = c(0, 1500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs")
hist( berkeleysums$totalDC, breaks = 20, xlim = c(0, 2500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs")
median(berkeleysums$totalDC)
mode(berkeleysums$totalDC)
table(berkeleysums$totalDC)
hist( berkeleysums$totalDC, breaks = 30, xlim = c(0, 1500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs")
hist( berkeleysums$totalDC, breaks = 40, xlim = c(0, 1500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs")
hist( berkeleysums$totalDC, breaks = 40, xlim = c(0, 2500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs")
?breaks
?hist
hist( berkeleysums$totalDC, breaks = 40, xlim = c(0, 2500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs", right=T)
hist( berkeleysums$totalDC, breaks = 40, xlim = c(0, 2500000), main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs", right=F)
hist( berkeleysums$totalDC, breaks = 20, xlim = c(0, 2500000),
main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs", right=F)
hist( berkeleysums$totalDC, breaks = 40, xlim = c(0, 2500000),
main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs", right=F)
hist(subset$Direct.Cost.IC, breaks=40, xlab = "Direct Costs", main="NIGMS R01s, 2021", right=F)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))),
breaks = 20, xlab = "Total direct costs", main="NIGMS R01s, total by PI, 2021", right=F)
hist(unlist(as.list(by( subset$Direct.Cost.IC, subset$Contact.PI...Project.Leader, sum))),
breaks = 40, xlab = "Total direct costs", main="NIGMS R01s, total by PI, 2021", right=F)
hist(mirasubset$Direct.Cost.IC, breaks = 30, main="NIGMS R35s, 2021", xlab="Direct Costs", right=F)
hist(berksubset$Direct.Cost.IC, breaks=30, main = "Berkeley R01-equivs, 2021", xlab="Direct Costs", right=F)
hist( berkeleysums$totalDC, breaks = 40, xlim = c(0, 2500000),
main="Berkeley total direct costs per PI, NIH R01-equivs", xlab="Direct Costs", right=F)
hist(berksubset$Direct.Cost.IC, breaks=30, main = "Berkeley, all NIH R01-equivs, 2021", xlab="Direct Costs", right=F)
hist( berkeleysums$totalDC, breaks = 40, xlim = c(0, 2500000),
main="Berkeley total direct costs per PI, all NIH R01-equivs", xlab="Direct Costs", right=F)
mcb = read.delim("~/Downloads/berkeley_mcb_r01equiv_2021.csv", sep=",", header=T)
View(mcb)
dim(mcb)
hist(mcb$Direct.Cost.IC)
hist(mcb$Direct.Cost.IC, breaks=20)
hist(mcb$Direct.Cost.IC, breaks=30)
hist(mcb$Direct.Cost.IC, breaks=40)
by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum)
unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum)))
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))))
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20)
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=40)
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=40, xlim = c(0, 1000000))
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20, xlim = c(0, 1000000))
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20, xlim = c(0, 1000000), main="MCB direct totals, R01-equiv (excl DP2)")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20, xlim = c(0, 1000000), main="MCB direct totals, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=40, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=25, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=26, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=25, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=40, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=26, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost")
hist(unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum))), breaks=20, xlim = c(0, 1000000), main="MCB direct totals, 2021, R01-equiv (excl DP2)", xlab="total direct cost", right=F)
mcbtotals = unlist(as.list(by( mcb$Direct.Cost.IC, mcb$Contact.PI...Project.Leader, sum)))
mcbtotals
length(mcbtotals)
sort(mcbtotals)
getwd()
getwd()
library(flowCore)
library(flowStats)
library(flowViz)
library(parallel)
library(plyr)
library(tidyverse)
library(readxl)
library(ggh4x)
library(viridis)
setwd("/Users/liana/Dropbox/Berkeley/CodonCRISPR/FiguresJune2022/CRISPRi/CRISPRi_Data/FCS_files/")
